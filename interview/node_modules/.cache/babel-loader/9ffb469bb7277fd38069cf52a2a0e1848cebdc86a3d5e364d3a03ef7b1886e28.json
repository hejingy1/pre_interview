{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'BackgroundApp',\n  data() {\n    return {\n      BackgroundColor: '#C4C0C0'\n    };\n  },\n  computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    rows() {\n      return this.getPlaces;\n    },\n    place() {\n      return this.getCenter;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","BackgroundColor","computed","rows","getPlaces","place","getCenter"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/PagTable.vue"],"sourcesContent":["<!-- <template>\n      <table :style=\"{ backgroundColor: BackgroundColor, borderColor: BackgroundColor }\">\n    <thead>\n      <tr>\n        <th style =\"width: 300px; height: 30%\" >Street Table</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"row in rows\" :key=\"row.place_id\">\n        <td>{{row.formatted_address}}</td>\n\n      </tr>\n    </tbody>\n  </table>\n</template> -->\n\n<template>\n  <div id=\"app\">\n    <section class=\"section\">\n      <h1 class=\"title\">Vue Select/De-select Demo</h1>\n      <p class=\"content\">\n        This CodePen manages a set of selects including a top-level select/de-select control\n      </p>\n      <div class=\"columns\">\n        <div class=\"column\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" class=\"checkbox\" :checked=\"allSelected\" @click=\"selectAll\"/></th>\n            <th>ID</th>\n            <th>Name</th>\n  </tr>\n  </thead>\n        <tbody>\n          <tr v-for=\"itm in items\" :key=\"itm.id\">\n            <td><input type=\"checkbox\" class=\"checkbox\" v-model=\"itm.selected\"/></td>\n            <td>{{ itm.id }}</td>\n            <td>{{ itm.name }}</td>\n  </tr>\n  </tbody>\n  </table>\n  </div>\n        <div class=\"column\">\n          <div class=\"box\">\n          <h2 class=\"subtitle\">Current Selections</h2>\n            <p class=\"content\">\n              {{ currentSelections }}\n  </p>\n  </div>\n  </div>\n  </div>\n      <p class=\"content\">\n        Select any combination of checkboxes.  The top-level checkbox will set or clear all of the items.  Individual item selections can also change the state of the top-level checkbox, depdending on whether their sibilings are all set or not.\n  </p>\n    </section>\n    <footer class=\"footer\">\n      <p class=\"content\">\n        Was this useful?  If so, please give a like.\n  </p>\n  </footer>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default{\n  name: 'BackgroundApp',\n    data() {\n        return {\n            BackgroundColor: '#C4C0C0',\n        }\n    },\n  computed :{\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    rows (){\n      return this.getPlaces\n    },\n    place(){\n      return this.getCenter\n    }\n  }\n}\n</script>\n"],"mappings":"AAgEA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAc;EACZC,IAAI,EAAE,eAAe;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE;IACrB;EACJ,CAAC;EACHC,QAAO,EAAG;IACR,GAAGJ,UAAU,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACtDK,IAAGA,CAAA,EAAI;MACL,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,KAAKA,CAAA,EAAE;MACL,OAAO,IAAI,CAACC,SAAQ;IACtB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}