{"ast":null,"code":"import { mapMutations, mapState } from 'vuex';\nexport default {\n  name: 'App',\n  store,\n  data() {\n    return {\n      center: {\n        lat: 43.65,\n        lng: -79.38\n      },\n      currentPlace: null,\n      markers: [],\n      places: []\n    };\n  },\n  computed: {\n    ...mapState(['storeC', 'storeM', 'storeP']),\n    center() {\n      return storeC;\n    }\n  },\n  methods: {\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        store.commit('addMarkers', marker);\n        store.commit('addPlaces', this.currentPlace);\n        store.commit('changeCenter', marker);\n        // this.markers.push({ position: marker });\n        // this.places.push(this.currentPlace);\n        // this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function () {\n      navigator.geolocation.getCurrentPosition(position => {\n        const current = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        store.commit('addMarkers', current);\n        store.commit('changeCenter', current);\n        // this.markers.push({position:current});\n        // this.center = current;\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","mapState","name","store","data","center","lat","lng","currentPlace","markers","places","computed","storeC","methods","setPlace","place","addMarker","marker","geometry","location","commit","geolocate","navigator","geolocation","getCurrentPosition","position","current","coords","latitude","longitude"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/MapMarker.vue"],"sourcesContent":["<template>\n  <GMapAutocomplete\n    placeholder=\"Enter an location\"\n    @place_changed='setPlace'\n    style=\"width: 300px; height: 30%\"\n  >\n  </GMapAutocomplete>\n  <button\n      @click='addMarker'>Add\n  </button>\n  <button @click=\"geolocate\">Get Current Location</button>\n  <GMapMap\n      :center=\"center\"\n      :zoom=\"15\"\n      map-type-id=\"terrain\"\n      style=\"width: 100%; height: 300px\" \n  >\n    <GMapMarker\n      v-for=\"marker in markers\"\n      :key=\"marker.id\"\n      :position=\"marker.position\"\n    />\n  </GMapMap>\n</template>\n<script>\n\nimport { mapMutations, mapState } from 'vuex';\nexport default {\n  name: 'App',\n  store,\n  data() {\n    return {\n      center: {lat: 43.65, lng: -79.38},\n      currentPlace: null,\n      markers: [],\n      places: [],\n    }\n  },\n  computed: {\n    ...mapState(['storeC', 'storeM', 'storeP']),\n    center (){\n      return storeC\n    }\n    \n  },\n  methods: {\n  setPlace(place) {\n    this.currentPlace = place;\n  },\n  addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng(),\n        };\n        \n        store.commit('addMarkers', marker)\n        store.commit('addPlaces', this.currentPlace)\n        store.commit('changeCenter', marker)\n        // this.markers.push({ position: marker });\n        // this.places.push(this.currentPlace);\n        // this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n  geolocate: function() {\n    navigator.geolocation.getCurrentPosition(position => {  \n      const current = {\n        lat: position.coords.latitude, lng: position.coords.longitude,\n      }\n      store.commit('addMarkers', current)\n      store.commit('changeCenter', current)\n      // this.markers.push({position:current});\n      // this.center = current;\n    });\n  },\n},\n}\n</script>"],"mappings":"AA0BA,SAASA,YAAY,EAAEC,QAAO,QAAS,MAAM;AAC7C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAK;EACLC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QAACC,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAK,CAAC;MACjCC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC3CI,MAAKA,CAAA,EAAI;MACP,OAAOO,MAAK;IACd;EAEF,CAAC;EACDC,OAAO,EAAE;IACTC,QAAQA,CAACC,KAAK,EAAE;MACd,IAAI,CAACP,YAAW,GAAIO,KAAK;IAC3B,CAAC;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAACR,YAAY,EAAE;QACrB,MAAMS,MAAK,GAAI;UACbX,GAAG,EAAE,IAAI,CAACE,YAAY,CAACU,QAAQ,CAACC,QAAQ,CAACb,GAAG,CAAC,CAAC;UAC9CC,GAAG,EAAE,IAAI,CAACC,YAAY,CAACU,QAAQ,CAACC,QAAQ,CAACZ,GAAG,CAAC;QAC/C,CAAC;QAEDJ,KAAK,CAACiB,MAAM,CAAC,YAAY,EAAEH,MAAM;QACjCd,KAAK,CAACiB,MAAM,CAAC,WAAW,EAAE,IAAI,CAACZ,YAAY;QAC3CL,KAAK,CAACiB,MAAM,CAAC,cAAc,EAAEH,MAAM;QACnC;QACA;QACA;QACA,IAAI,CAACT,YAAW,GAAI,IAAI;MAC1B;IACF,CAAC;IACHa,SAAS,EAAE,SAAAA,CAAA,EAAW;MACpBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAO,IAAK;QACnD,MAAMC,OAAM,GAAI;UACdpB,GAAG,EAAEmB,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAAErB,GAAG,EAAEkB,QAAQ,CAACE,MAAM,CAACE;QACtD;QACA1B,KAAK,CAACiB,MAAM,CAAC,YAAY,EAAEM,OAAO;QAClCvB,KAAK,CAACiB,MAAM,CAAC,cAAc,EAAEM,OAAO;QACpC;QACA;MACF,CAAC,CAAC;IACJ;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}