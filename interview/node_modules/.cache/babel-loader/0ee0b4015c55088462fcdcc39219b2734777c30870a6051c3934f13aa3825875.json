{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"300px\",\n    \"height\": \"30%\"\n  }\n}, \"Street Table\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", {\n    style: _normalizeStyle({\n      backgroundColor: $data.BackgroundColor,\n      borderColor: $data.BackgroundColor\n    })\n  }, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.rows, row => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: row.place_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row.formatted_address), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementVNode","style","_createElementBlock","_normalizeStyle","backgroundColor","$data","BackgroundColor","borderColor","_hoisted_1","_Fragment","_renderList","$options","rows","row","key","place_id","_toDisplayString","formatted_address"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/PagTable.vue"],"sourcesContent":["<template>\n      <table :style=\"{ backgroundColor: BackgroundColor, borderColor: BackgroundColor }\">\n    <thead>\n      <tr>\n        <th style =\"width: 300px; height: 30%\" >Street Table</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"row in rows\" :key=\"row.place_id\">\n        <td>{{row.formatted_address}}</td>\n\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default{\n  name: 'BackgroundApp',\n    data() {\n        return {\n            BackgroundColor: '#ffffff',\n        }\n    },\n  computed :{\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    rows (){\n      return this.getPlaces\n    },\n    place(){\n      return this.getCenter\n    }\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAIQ,gB,aAHNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAyD;EAArDC,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC,GAAE,cAAY,E;;;uBAHtDC,mBAAA,CAYI;IAZID,KAAK,EAAAE,eAAA;MAAAC,eAAA,EAAqBC,KAAA,CAAAC,eAAe;MAAAC,WAAA,EAAeF,KAAA,CAAAC;IAAe;MACjFE,UAIQ,EACRR,mBAAA,CAKQ,iB,kBAJNE,mBAAA,CAGKO,SAAA,QAAAC,WAAA,CAHaC,QAAA,CAAAC,IAAI,EAAXC,GAAG;yBAAdX,mBAAA,CAGK;MAHoBY,GAAG,EAAED,GAAG,CAACE;QAChCf,mBAAA,CAAkC,YAAAgB,gBAAA,CAA5BH,GAAG,CAACI,iBAAiB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}