{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      selectedStreets: [],\n      itemsPerPage: 10,\n      currentPage: 1\n    };\n  },\n  computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    paginatedStreetNames() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.getPlaces.slice(startIndex, endIndex);\n    },\n    totalPages() {\n      return Math.ceil(this.getPlaces.length / this.itemsPerPage);\n    },\n    showPagination() {\n      return this.totalPages > 1;\n    }\n  },\n  methods: {\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      console.log(this.currentPage);\n      console.log(this.totalPages);\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    deleteSelectedRows() {\n      this.selectedStreets.forEach(street => {\n        const index = this.streetNames.findIndex(s => s.id === street.id);\n        if (index !== -1) {\n          this.streetNames.splice(index, 1);\n        }\n      });\n      this.selectedStreets = [];\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","selectedStreets","itemsPerPage","currentPage","computed","paginatedStreetNames","startIndex","endIndex","getPlaces","slice","totalPages","Math","ceil","length","showPagination","methods","previousPage","nextPage","console","log","deleteSelectedRows","forEach","street","index","streetNames","findIndex","s","id","splice"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/CheckTable.vue"],"sourcesContent":["<template>\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Street Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"street in paginatedStreetNames\" :key=\"street.id\">\n            <td><input type=\"checkbox\" v-model=\"selectedStreets\" :value=\"street\" /></td>\n            <td>{{ street.name }}</td>\n          </tr>\n        </tbody>\n      </table>\n  \n      <div>\n        <button @click=\"previousPage\" :disabled=\"currentPage === 1\">Previous</button>\n        <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">Next</button>\n      </div>\n  \n      <button @click=\"deleteSelectedRows\" v-if=\"selectedStreets.length > 0\">Delete Selected Rows</button>\n    </div>\n  </template>\n  \n  <script>\n  import { mapGetters } from 'vuex';\n  export default {\n    data() {\n      return {\n        selectedStreets: [],\n        itemsPerPage: 10,\n        currentPage: 1,\n      };\n    },\n    computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    paginatedStreetNames() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.getPlaces.slice(startIndex, endIndex);\n    },\n    totalPages() {\n      return Math.ceil(this.getPlaces.length / this.itemsPerPage);\n    },\n      showPagination() {\n        return this.totalPages > 1;\n      },\n    },\n    methods: {\n      previousPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n        }\n      },\n      nextPage() {\n        console.log(this.currentPage)\n        console.log(this.totalPages)\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n        }\n      },\n      deleteSelectedRows() {\n        this.selectedStreets.forEach(street => {\n          const index = this.streetNames.findIndex(s => s.id === street.id);\n          if (index !== -1) {\n            this.streetNames.splice(index, 1);\n          }\n        });\n        this.selectedStreets = [];\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AA2BE,SAASA,UAAS,QAAS,MAAM;AACjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACV,GAAGL,UAAU,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACtDM,oBAAoBA,CAAA,EAAG;MACrB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACH,WAAU,GAAI,CAAC,IAAI,IAAI,CAACD,YAAY;MAC7D,MAAMK,QAAO,GAAID,UAAS,GAAI,IAAI,CAACJ,YAAY;MAC/C,OAAO,IAAI,CAACM,SAAS,CAACC,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;IACnD,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACK,MAAK,GAAI,IAAI,CAACX,YAAY,CAAC;IAC7D,CAAC;IACCY,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACJ,UAAS,GAAI,CAAC;IAC5B;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACb,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDc,QAAQA,CAAA,EAAG;MACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,WAAW;MAC5Be,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU;MAC3B,IAAI,IAAI,CAACP,WAAU,GAAI,IAAI,CAACO,UAAU,EAAE;QACtC,IAAI,CAACP,WAAW,EAAE;MACpB;IACF,CAAC;IACDiB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACnB,eAAe,CAACoB,OAAO,CAACC,MAAK,IAAK;QACrC,MAAMC,KAAI,GAAI,IAAI,CAACC,WAAW,CAACC,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,MAAM,CAACK,EAAE,CAAC;QACjE,IAAIJ,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAACC,WAAW,CAACI,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;QACnC;MACF,CAAC,CAAC;MACF,IAAI,CAACtB,eAAc,GAAI,EAAE;IAC3B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}