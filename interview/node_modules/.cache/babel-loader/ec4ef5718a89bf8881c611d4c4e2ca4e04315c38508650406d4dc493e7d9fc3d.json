{"ast":null,"code":"import { mapMutations, mapGetters } from 'vuex';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      currentPlace: null,\n      timeZone: '',\n      utcOffset: -5,\n      localTime: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    center() {\n      return this.getCenter;\n    },\n    markers() {\n      return this.getMarker;\n    },\n    places() {\n      return this.getPlaces;\n    }\n  },\n  methods: {\n    ...mapMutations(['addMarkers', 'addPlaces', 'changeCenter']),\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.addMarkers(marker);\n        this.addPlaces(this.currentPlace);\n        this.changeCenter(marker);\n        this.utcOffset = this.currentPlace.utc_offset / 60;\n        this.getTimeZone();\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function () {\n      navigator.geolocation.getCurrentPosition(position => {\n        const current = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        this.changeCenter(current);\n      });\n    },\n    getTimeZone() {\n      const timeZone = Intl.DateTimeFormat(undefined, {\n        timeZoneName: 'long',\n        timeZone: `ETC/GMT${this.utcOffset < 0 ? '-' : '+'}${Math.abs(this.utcOffset)}`\n      }).resolvedOptions().timeZone;\n      this.timeZone = timeZone;\n      var d = new Date();\n      var utc = d.getTime() + d.getTimezoneOffset() * 60000;\n      this.localTime = new Date(utc + 3600000 * this.utcOffset);\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","mapGetters","name","data","currentPlace","timeZone","utcOffset","localTime","computed","center","getCenter","markers","getMarker","places","getPlaces","methods","setPlace","place","addMarker","marker","lat","geometry","location","lng","addMarkers","addPlaces","changeCenter","utc_offset","getTimeZone","geolocate","navigator","geolocation","getCurrentPosition","position","current","coords","latitude","longitude","Intl","DateTimeFormat","undefined","timeZoneName","Math","abs","resolvedOptions","d","Date","utc","getTime","getTimezoneOffset"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/MapMarker.vue"],"sourcesContent":["<template>\n  <div>\n    <p>UTC Offset: {{ localTime }}</p>\n    <p>Time Zone: {{ timeZone }}</p>\n  </div>\n  <GMapAutocomplete\n    placeholder=\"Enter an location\"\n    @place_changed='setPlace'\n    style=\"width: 300px; height: 30%\"\n  >\n  </GMapAutocomplete>\n  <button\n      @click='addMarker'>Add\n  </button>\n  <button @click=\"geolocate\">Get Current Location</button>\n  <GMapMap\n      :center=\"center\"\n      :zoom=\"15\"\n      map-type-id=\"terrain\"\n      style=\"width: 100%; height: 300px\" \n  >\n    <GMapMarker\n      v-for=\"marker in markers\"\n      :key=\"marker.id\"\n      :position=\"marker.position\"\n    />\n  </GMapMap>\n</template>\n<script>\n\n\nimport { mapMutations, mapGetters } from 'vuex';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      currentPlace: null,\n      timeZone: '',\n      utcOffset: -5,\n      localTime: \"\",\n    }\n  },\n  computed: { \n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    center (){\n      return this.getCenter\n    },\n    markers () {\n      return this.getMarker\n    },\n    places (){\n      return this.getPlaces\n    },\n  },  \n  methods: {\n  ...mapMutations(['addMarkers', 'addPlaces', 'changeCenter']),\n  setPlace(place) {\n    this.currentPlace = place;\n  },\n  addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng(),\n        };\n        \n        this.addMarkers(marker)\n        this.addPlaces(this.currentPlace) \n        this.changeCenter(marker)\n        this.utcOffset = this.currentPlace.utc_offset/60\n        this.getTimeZone()\n        this.currentPlace = null;\n      }\n    },\n  geolocate: function() {\n    navigator.geolocation.getCurrentPosition(position => {  \n      const current = {\n        lat: position.coords.latitude, lng: position.coords.longitude,\n      }\n      this.changeCenter(current)\n    });\n  },\n  getTimeZone() {\n      const timeZone = Intl.DateTimeFormat(undefined, {\n        timeZoneName: 'long',\n        timeZone: `ETC/GMT${this.utcOffset < 0 ? '-' : '+'}${Math.abs(\n          this.utcOffset\n        )}`,\n      }).resolvedOptions().timeZone;\n      this.timeZone = timeZone;\n      var d = new Date();\n      var utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n      this.localTime = new Date(utc + (3600000*this.utcOffset));\n    },\n},\n}\n</script>"],"mappings":"AA+BA,SAASA,YAAY,EAAEC,UAAS,QAAS,MAAM;AAC/C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,CAAC,CAAC;MACbC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGP,UAAU,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACtDQ,MAAKA,CAAA,EAAI;MACP,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,OAAMA,CAAA,EAAK;MACT,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,MAAKA,CAAA,EAAI;MACP,OAAO,IAAI,CAACC,SAAQ;IACtB;EACF,CAAC;EACDC,OAAO,EAAE;IACT,GAAGf,YAAY,CAAC,CAAC,YAAY,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IAC5DgB,QAAQA,CAACC,KAAK,EAAE;MACd,IAAI,CAACb,YAAW,GAAIa,KAAK;IAC3B,CAAC;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAACd,YAAY,EAAE;QACrB,MAAMe,MAAK,GAAI;UACbC,GAAG,EAAE,IAAI,CAAChB,YAAY,CAACiB,QAAQ,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC;UAC9CG,GAAG,EAAE,IAAI,CAACnB,YAAY,CAACiB,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC;QAC/C,CAAC;QAED,IAAI,CAACC,UAAU,CAACL,MAAM;QACtB,IAAI,CAACM,SAAS,CAAC,IAAI,CAACrB,YAAY;QAChC,IAAI,CAACsB,YAAY,CAACP,MAAM;QACxB,IAAI,CAACb,SAAQ,GAAI,IAAI,CAACF,YAAY,CAACuB,UAAU,GAAC,EAAC;QAC/C,IAAI,CAACC,WAAW,CAAC;QACjB,IAAI,CAACxB,YAAW,GAAI,IAAI;MAC1B;IACF,CAAC;IACHyB,SAAS,EAAE,SAAAA,CAAA,EAAW;MACpBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAO,IAAK;QACnD,MAAMC,OAAM,GAAI;UACdd,GAAG,EAAEa,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAAEb,GAAG,EAAEU,QAAQ,CAACE,MAAM,CAACE;QACtD;QACA,IAAI,CAACX,YAAY,CAACQ,OAAO;MAC3B,CAAC,CAAC;IACJ,CAAC;IACDN,WAAWA,CAAA,EAAG;MACV,MAAMvB,QAAO,GAAIiC,IAAI,CAACC,cAAc,CAACC,SAAS,EAAE;QAC9CC,YAAY,EAAE,MAAM;QACpBpC,QAAQ,EAAG,UAAS,IAAI,CAACC,SAAQ,GAAI,IAAI,GAAE,GAAI,GAAI,GAAEoC,IAAI,CAACC,GAAG,CAC3D,IAAI,CAACrC,SACP,CAAE;MACJ,CAAC,CAAC,CAACsC,eAAe,CAAC,CAAC,CAACvC,QAAQ;MAC7B,IAAI,CAACA,QAAO,GAAIA,QAAQ;MACxB,IAAIwC,CAAA,GAAI,IAAIC,IAAI,CAAC,CAAC;MAClB,IAAIC,GAAE,GAAIF,CAAC,CAACG,OAAO,CAAC,IAAKH,CAAC,CAACI,iBAAiB,CAAC,IAAI,KAAM;MACvD,IAAI,CAAC1C,SAAQ,GAAI,IAAIuC,IAAI,CAACC,GAAE,GAAK,OAAO,GAAC,IAAI,CAACzC,SAAU,CAAC;IAC3D;EACJ;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}