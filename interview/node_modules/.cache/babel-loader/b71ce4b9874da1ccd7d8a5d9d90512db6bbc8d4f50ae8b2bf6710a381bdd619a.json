{"ast":null,"code":"import { mapMutations, mapGetters } from 'vuex';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      currentPlace: null\n    };\n  },\n  computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    center() {\n      return this.getCenter;\n    },\n    markers() {\n      return this.getMarker;\n    },\n    places() {\n      return this.getPlaces;\n    }\n  },\n  methods: {\n    ...mapMutations(['addMarkers', 'addPlaces', 'changeCenter']),\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat().toFixed(4),\n          lng: this.currentPlace.geometry.location.lng().toFixed(4)\n        };\n        this.addMarkers(marker);\n        this.addPlaces(this.currentPlace);\n        this.changeCenter(marker);\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function () {\n      navigator.geolocation.getCurrentPosition(position => {\n        const current = {\n          lat: position.coords.latitude.toFixed(4),\n          lng: position.coords.longitude.toFixed(4)\n        };\n        this.addMarkers(current);\n        this.addPlaces(this.currentPlace);\n        this.changeCenter(current);\n        this.currentPlace = null;\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","mapGetters","name","data","currentPlace","computed","center","getCenter","markers","getMarker","places","getPlaces","methods","setPlace","place","addMarker","marker","lat","geometry","location","toFixed","lng","addMarkers","addPlaces","changeCenter","geolocate","navigator","geolocation","getCurrentPosition","position","current","coords","latitude","longitude"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/MapMarker.vue"],"sourcesContent":["<template>\n  <GMapAutocomplete\n    placeholder=\"Enter an location\"\n    @place_changed='setPlace'\n    style=\"width: 300px; height: 30%\"\n  >\n  </GMapAutocomplete>\n  <button\n      @click='addMarker'>Add\n  </button>\n  <button @click=\"geolocate\">Get Current Location</button>\n  <GMapMap\n      @place_changed='setPlace'\n      :center=\"center\"\n      :zoom=\"15\"\n      map-type-id=\"terrain\"\n      style=\"width: 100%; height: 300px\" \n  >\n    <GMapMarker\n      v-for=\"marker in markers\"\n      :key=\"marker.id\"\n      :position=\"marker.position\"\n    />\n  </GMapMap>\n</template>\n<script>\n\n\nimport { mapMutations, mapGetters } from 'vuex';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      currentPlace: null,\n    }\n  },\n  computed: {\n    ...mapGetters(['getCenter', 'getMarker', 'getPlaces']),\n    center (){\n      return this.getCenter\n    },\n    markers () {\n      return this.getMarker\n    },\n    places (){\n      return this.getPlaces\n    },\n  },  \n  methods: {\n  ...mapMutations(['addMarkers', 'addPlaces', 'changeCenter']),\n  setPlace(place) {\n    this.currentPlace = place;\n  },\n  addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat().toFixed(4),\n          lng: this.currentPlace.geometry.location.lng().toFixed(4),\n        };\n        \n        this.addMarkers(marker)\n        this.addPlaces(this.currentPlace) \n        this.changeCenter(marker)\n        this.currentPlace = null;\n      }\n    },\n  geolocate: function() {\n    navigator.geolocation.getCurrentPosition(position => {  \n      const current = {\n        lat: position.coords.latitude.toFixed(4), lng: position.coords.longitude.toFixed(4),\n      }\n      this.addMarkers(current)\n      this.addPlaces(this.currentPlace)\n      this.changeCenter(current)\n      this.currentPlace = null;\n    });\n  },\n},\n}\n</script>"],"mappings":"AA4BA,SAASA,YAAY,EAAEC,UAAS,QAAS,MAAM;AAC/C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACtDK,MAAKA,CAAA,EAAI;MACP,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,OAAMA,CAAA,EAAK;MACT,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,MAAKA,CAAA,EAAI;MACP,OAAO,IAAI,CAACC,SAAQ;IACtB;EACF,CAAC;EACDC,OAAO,EAAE;IACT,GAAGZ,YAAY,CAAC,CAAC,YAAY,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IAC5Da,QAAQA,CAACC,KAAK,EAAE;MACd,IAAI,CAACV,YAAW,GAAIU,KAAK;IAC3B,CAAC;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAACX,YAAY,EAAE;QACrB,MAAMY,MAAK,GAAI;UACbC,GAAG,EAAE,IAAI,CAACb,YAAY,CAACc,QAAQ,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;UACzDC,GAAG,EAAE,IAAI,CAACjB,YAAY,CAACc,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC,CAAC;QAC1D,CAAC;QAED,IAAI,CAACE,UAAU,CAACN,MAAM;QACtB,IAAI,CAACO,SAAS,CAAC,IAAI,CAACnB,YAAY;QAChC,IAAI,CAACoB,YAAY,CAACR,MAAM;QACxB,IAAI,CAACZ,YAAW,GAAI,IAAI;MAC1B;IACF,CAAC;IACHqB,SAAS,EAAE,SAAAA,CAAA,EAAW;MACpBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAO,IAAK;QACnD,MAAMC,OAAM,GAAI;UACdb,GAAG,EAAEY,QAAQ,CAACE,MAAM,CAACC,QAAQ,CAACZ,OAAO,CAAC,CAAC,CAAC;UAAEC,GAAG,EAAEQ,QAAQ,CAACE,MAAM,CAACE,SAAS,CAACb,OAAO,CAAC,CAAC;QACpF;QACA,IAAI,CAACE,UAAU,CAACQ,OAAO;QACvB,IAAI,CAACP,SAAS,CAAC,IAAI,CAACnB,YAAY;QAChC,IAAI,CAACoB,YAAY,CAACM,OAAO;QACzB,IAAI,CAAC1B,YAAW,GAAI,IAAI;MAC1B,CAAC,CAAC;IACJ;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}