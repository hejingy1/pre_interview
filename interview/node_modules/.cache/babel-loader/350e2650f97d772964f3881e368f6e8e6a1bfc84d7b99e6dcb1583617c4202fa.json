{"ast":null,"code":"export default {\n  methods: {\n    getGeolocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition, this.showError);\n      } else {\n        console.log('Geolocation is not supported by this browser.');\n      }\n    },\n    showPosition(position) {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      console.log('Latitude: ' + latitude);\n      console.log('Longitude: ' + longitude);\n      // Here you can perform any additional actions with the obtained latitude and longitude values\n    },\n\n    showError(error) {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          console.log('User denied the request for Geolocation.');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          console.log('Location information is unavailable.');\n          break;\n        case error.TIMEOUT:\n          console.log('The request to get user location timed out.');\n          break;\n        case error.UNKNOWN_ERROR:\n          console.log('An unknown error occurred.');\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["methods","getGeolocation","navigator","geolocation","getCurrentPosition","showPosition","showError","console","log","position","latitude","coords","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR"],"sources":["/home/hejingyuan10/pre-int/interview/src/components/GeolocationButton.vue"],"sourcesContent":["<template>\n    <div>\n      <button @click=\"getGeolocation\">Get Location</button>\n    </div>\n  </template>\n\n<script>\nexport default {\n  methods: {\n    getGeolocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          this.showPosition,\n          this.showError\n        );\n      } else {\n        console.log('Geolocation is not supported by this browser.');\n      }\n    },\n    showPosition(position) {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      console.log('Latitude: ' + latitude);\n      console.log('Longitude: ' + longitude);\n      // Here you can perform any additional actions with the obtained latitude and longitude values\n    },\n    showError(error) {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          console.log('User denied the request for Geolocation.');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          console.log('Location information is unavailable.');\n          break;\n        case error.TIMEOUT:\n          console.log('The request to get user location timed out.');\n          break;\n        case error.UNKNOWN_ERROR:\n          console.log('An unknown error occurred.');\n          break;\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAOA,eAAe;EACbA,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,IAAI,CAACC,YAAY,EACjB,IAAI,CAACC,SACP,CAAC;MACH,OAAO;QACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC9D;IACF,CAAC;IACDH,YAAYA,CAACI,QAAQ,EAAE;MACrB,MAAMC,QAAO,GAAID,QAAQ,CAACE,MAAM,CAACD,QAAQ;MACzC,MAAME,SAAQ,GAAIH,QAAQ,CAACE,MAAM,CAACC,SAAS;MAC3CL,OAAO,CAACC,GAAG,CAAC,YAAW,GAAIE,QAAQ,CAAC;MACpCH,OAAO,CAACC,GAAG,CAAC,aAAY,GAAII,SAAS,CAAC;MACtC;IACF,CAAC;;IACDN,SAASA,CAACO,KAAK,EAAE;MACf,QAAQA,KAAK,CAACC,IAAI;QAChB,KAAKD,KAAK,CAACE,iBAAiB;UAC1BR,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvD;QACF,KAAKK,KAAK,CAACG,oBAAoB;UAC7BT,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UACnD;QACF,KAAKK,KAAK,CAACI,OAAO;UAChBV,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;UAC1D;QACF,KAAKK,KAAK,CAACK,aAAa;UACtBX,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;UACzC;MACJ;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}